
R version 3.4.2 (2017-09-28) -- "Short Summer"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args = commandArgs(trailingOnly=TRUE)
> nPeriods = args[1]
> nGroups = args[2]
> dateStr = args[3]
> cat("hello")
hello> filePath = paste("~/Dropbox/Academics/Research/UCSC/redwood-high-frequency-trading-remote/config/",dateStr,"/",sep="")
> 
> # Parameters for jump times
> totalTime = 5*60*1000
> lambdaJ = 1/4000
> nSimJ = 2*totalTime*lambdaJ
> 
> # Parameters for jump distribution
> startPrice = 100
> muJump = 0
> sigJump = 0.5
> 
> # Investor parameters
> lambdaI = 1/3000 #lambdaJ*.5
> nSimI = 2*totalTime*lambdaI
> buyProb = 0.5
> 
> for(periodVal in 1:nPeriods){
+   for(groupVal in 1:nGroups){
+ 
+     # Simulate times and sizes
+     jumpTimes = cumsum(round(rexp(nSimJ,lambdaJ)))
+     jumpTimes = jumpTimes[jumpTimes < totalTime]
+     nJump = length(jumpTimes)
+     jumpSizes = startPrice + cumsum(rnorm(nJump,muJump,sigJump))
+ 
+     # Save jumps to CSV
+     jumpData = rbind(c(0,startPrice),cbind(jumpTimes, jumpSizes))
+     jumpFile = paste(filePath,"Jumps/jumps_period",periodVal,"_group",groupVal,".csv",sep="")
+     write.csv(jumpData,jumpFile,row.names=FALSE)
+ 
+     # Simulate investor arrivals and directions
+     investorTimes = cumsum(round(rexp(nSimI,lambdaI)))
+     investorTimes = investorTimes[investorTimes < totalTime]
+     nInvestor = length(investorTimes)
+     investorDirections = rbinom(nInvestor,1,buyProb)
+ 
+     # Save investor arrivals to CSV
+     investorData = cbind(investorTimes, investorDirections)
+     investorFile = paste(filePath,"Investors/investors_period",periodVal,"_group",groupVal,".csv",sep="")
+     write.csv(investorData,investorFile,row.names=FALSE)
+   }
+ }
Error in 1:nPeriods : NA/NaN argument
Execution halted
